create table "blog" (is_membership boolean, created_at timestamp(6), id uuid not null, user_id uuid, description varchar(255), name varchar(255), website_url varchar(255), primary key (id));
create table "comment" (created_at timestamp(6), id uuid not null, post_id uuid, user_id uuid, content varchar(255), primary key (id));
create table "comment_like" (created_at timestamp(6), comment_id uuid, id uuid not null, user_id uuid unique, status enum ('DISLIKE','LIKE','NONE'), primary key (id));
create table "email_confirmation" (is_confirmed boolean, expiration_date timestamp(6), confirmation_code uuid, user_id uuid not null, primary key (user_id));
create table "password_recovery" (is_used boolean, expiration_date timestamp(6), recovery_code uuid, user_id uuid not null, primary key (user_id));
create table "post" (is_banned boolean, created_at timestamp(6), blog_id uuid, id uuid not null, user_id uuid, content varchar(255), short_description varchar(255), title varchar(255), primary key (id));
create table "post_like" (created_at timestamp(6), id uuid not null, post_id uuid, user_id uuid unique, status enum ('DISLIKE','LIKE','NONE'), primary key (id));
create table "quiz_game_answer" (added_at timestamp(6), game_player_progress_id uuid, id uuid not null, quiz_question_id uuid, answer_status enum ('CORRECT','INCORRECT'), primary key (id));
create table "quiz_game_pair" (version integer, finish_game_date timestamp(6), pair_created_date timestamp(6) not null, start_game_date timestamp(6), first_player_id uuid unique, id uuid not null, second_player_id uuid unique, status enum ('ACTIVE','FINISHED','PENDING'), primary key (id));
create table "quiz_game_pair_questions" (game_pair_id uuid not null, question_id uuid not null);
create table "quiz_game_player_progress" (score integer, version integer, id uuid not null, user_id uuid, primary key (id));
create table "quiz_question" (published boolean not null, created_at timestamp(6) not null, updated_at timestamp(6), id uuid not null, body varchar(1000) not null, primary key (id));
create table "quiz_question_correct_answers" (question_id uuid not null, correct_answers varchar(255));
create table "roles" (id bigint generated by default as identity, name varchar(255), primary key (id));
create table "security" (is_valid boolean, created_at timestamp(6), last_active_date timestamp(6), device_id uuid, id uuid not null, user_id uuid, ip varchar(255), title varchar(255), primary key (id));
create table "user" (created_at timestamp(6), id uuid not null, email varchar(255), login varchar(255), password_hash varchar(255), primary key (id));
create table "user_roles" (role_id bigint not null, user_id uuid not null);

alter table if exists "blog" add constraint FK6dthhdqikchaongkif1qfcbwf foreign key (user_id) references "user";
alter table if exists "comment" add constraint FKk1s81bmm90lj4nextpa2v2mkc foreign key (post_id) references "post";
alter table if exists "comment" add constraint FKd3v4haygsy325q1j873y347ge foreign key (user_id) references "user";
alter table if exists "comment_like" add constraint FK721ds8ty7bsyej7a3ukfb26gc foreign key (user_id) references "user";
alter table if exists "comment_like" add constraint FKa3kdn13obo2s4nffnw45vke7s foreign key (comment_id) references "comment";
alter table if exists "email_confirmation" add constraint FKnrj6da25vbt3fsq6um9foohdd foreign key (user_id) references "user";
alter table if exists "password_recovery" add constraint FKmhq71gh8baij23cme954anvgo foreign key (user_id) references "user";
alter table if exists "post" add constraint FKse3r1p9v78llcks75s8yh2hy7 foreign key (blog_id) references "blog";
alter table if exists "post" add constraint FK51aeb5le008k8klgnyfaalmn foreign key (user_id) references "user";
alter table if exists "post_like" add constraint FKbvi671xf8t6k6ajfwn9y6779g foreign key (user_id) references "user";
alter table if exists "post_like" add constraint FKj7iy0k7n3d0vkh8o7ibjna884 foreign key (post_id) references "post";
alter table if exists "quiz_game_answer" add constraint FK3mag8od6ruvyyqkqpxj9do6vi foreign key (quiz_question_id) references "quiz_question";
alter table if exists "quiz_game_answer" add constraint FKd2y5hihfxmxopd4cb89eebxpt foreign key (game_player_progress_id) references "quiz_game_player_progress";
alter table if exists "quiz_game_pair" add constraint FK6g1sy0i9btctahd6tu8c0wu0u foreign key (first_player_id) references "quiz_game_player_progress";
alter table if exists "quiz_game_pair" add constraint FKo8s7kuc02fsamp4vy8599ccr7 foreign key (second_player_id) references "quiz_game_player_progress";
alter table if exists "quiz_game_pair_questions" add constraint FKmfi2ru3sgnwkwo6yeqmc68qyw foreign key (question_id) references "quiz_question";
alter table if exists "quiz_game_pair_questions" add constraint FKtkajuk6fu35r94jbvir2nv35h foreign key (game_pair_id) references "quiz_game_pair";
alter table if exists "quiz_game_player_progress" add constraint FKdn1hln23du4k4nv8bo70jum04 foreign key (user_id) references "user";
alter table if exists "quiz_question_correct_answers" add constraint FKsqbd0ik2pfu7hfkewyvsjiv1o foreign key (question_id) references "quiz_question";
alter table if exists "user_roles" add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references "roles";
alter table if exists "user_roles" add constraint FK7ivp84f52aa3vd7ndq0oh0279 foreign key (user_id) references "user";